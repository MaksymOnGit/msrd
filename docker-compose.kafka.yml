services:

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    profiles: 
      - tools
    ports:
      - 8083:8080
    depends_on:
      - kafka0
      - schemaregistry0
      - kafka-connect0
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka0:29092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schemaregistry0:8085
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: first
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect0:8083
      KAFKA_CLUSTERS_0_KSQLDBSERVER: http://ksqldb:8088
    logging:
      options:
        max-size: "12m"
        max-file: "5"
      driver: json-file

  kafka0:
    image: confluentinc/cp-kafka:7.2.1
    restart: always
    volumes:
      - kafka0-data-volume:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka0:29092,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka0:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka0 -Dcom.sun.management.jmxremote.rmi.port=9997
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
    healthcheck:
      test: nc -z kafka0 29092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    depends_on:
      zookeeper:
        condition: service_healthy

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    restart: always
    volumes:
      - zookeeper-data-volume:/var/lib/zookeeper/data
      - zookeeper-log-volume:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

  schemaregistry0:
    image: confluentinc/cp-schema-registry:7.2.1
    restart: always
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka0:29092
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry0
      SCHEMA_REGISTRY_LISTENERS: http://schemaregistry0:8085

      SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "http"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
    healthcheck:
      test: nc -z schemaregistry0 8085 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    depends_on:
      kafka0:
        condition: service_healthy

  kafka-connect0:
    build:
      context: ./Kafka/kafka-connect
      args:
        image: confluentinc/cp-kafka-connect:6.0.1
    restart: always
    volumes:
      - kafka-connect0-data-volume:/var/lib/kafka/data
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka0:29092
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: _connect_configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_TOPIC: _connect_offset
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: _connect_status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schemaregistry0:8085
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schemaregistry0:8085
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: http
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect0
      CONNECT_REST_PORT: 8083
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
    healthcheck:
      test: /etc/confluent/docker/healthcheck.sh
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    depends_on:
      kafka0:
        condition: service_healthy
      schemaregistry0:
        condition: service_healthy

  init-kafka:
    image: confluentinc/cp-kafka:7.2.1
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka0:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka0:29092 --create --if-not-exists --topic MsrdDocuments.documents --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka0:29092 --create --if-not-exists --topic MsrdProducts.products --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka0:29092 --create --if-not-exists --topic MsrdStocs.public.document_statuses --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka0:29092 --create --if-not-exists --topic MsrdStocs.public.stock_records --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka0:29092 --list
      "
    depends_on:
      kafka0:
        condition: service_healthy

  ksqldb:
    image: confluentinc/ksqldb-server:0.18.0
    profiles: 
      - tools
    depends_on:
      - kafka0
      - kafka-connect0
      - schemaregistry0
    ports:
      - 8088:8088
    environment:
      KSQL_CUB_KAFKA_TIMEOUT: 120
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: PLAINTEXT://kafka0:29092
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_KSQL_CONNECT_URL: http://kafka-connect0:8083
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schemaregistry0:8085
      KSQL_KSQL_SERVICE_ID: my_ksql_1
      KSQL_KSQL_HIDDEN_TOPICS: '^_.*'
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
    logging:
      options:
        max-size: "12m"
        max-file: "5"
      driver: json-file
      
volumes:
  kafka0-data-volume:
  zookeeper-data-volume:
  zookeeper-log-volume:
  kafka-connect0-data-volume: